// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PromptCreator creates an action prompt correctly 1`] = `
"# Test Code Generation

## Context

### View Hierarchy
\`\`\`
<View><Button testID="submit" title="Submit" /></View>
\`\`\`

### Image Snapshot
An image snapshot of the current UI state is attached to this prompt.

### Intent
Tap the submit button

## Guidelines
- Use the most appropriate method(s) from the available API.
- Ensure the code is directly executable in JavaScript.
- If the operation is impossible, explain why in a brief error message (e.g. "A login button element was not found, looks like the user is already logged in").
- Consider the attached image snapshot when determining best course of action.

Return only the executable code or the error message, without any additional formatting or explanation.

## Available Methods
### tap(element: Element) (Suggested, relevance: 1.00)

Taps on the specified element.

#### Example
\`\`\`
await element(by.id("button")).tap();
\`\`\`

#### Guidelines
- Ensure the element is tappable before using this method.

### typeText(element: Element, text: string) (Suggested, relevance: 1.00)

Types the specified text into the element.

#### Example
\`\`\`
await element(by.id("input")).typeText("Hello, World!");
\`\`\`

#### Guidelines
- Use this method only on text input elements.

## Related Methods

3 most relevant methods, based on semantic similarity:
- \`tap(element: Element)\` (relevance: 1.00)
- \`typeText(element: Element, text: string)\` (relevance: 1.00)

## Available Matchers

- \`by.id(id: string)\`: Matches elements by their ID attribute."
`;

exports[`PromptCreator creates an assertion prompt correctly 1`] = `
"# Test Code Generation

## Context

### View Hierarchy
\`\`\`
<View><Text testID="successMessage">Success!</Text></View>
\`\`\`

### Image Snapshot
An image snapshot of the current UI state is attached to this prompt.

### Intent
Check if the success message is visible

## Guidelines
- Use the most appropriate method(s) from the available API.
- Ensure the code is directly executable in JavaScript.
- If the operation is impossible, explain why in a brief error message (e.g. "A login button element was not found, looks like the user is already logged in").
- Consider the attached image snapshot when determining best course of action.

Return only the executable code or the error message, without any additional formatting or explanation.

## Available Methods
### toBeVisible() (Suggested, relevance: 0.94)

Asserts that the element is visible on the screen.

#### Example
\`\`\`
await expect(element(by.id("title"))).toBeVisible();
\`\`\`

#### Guidelines
- Consider scroll position when using this assertion.

## Related Methods

3 most relevant methods, based on semantic similarity:
- \`toBeVisible()\` (relevance: 0.94)

## Available Matchers

- \`by.id(id: string)\`: Matches elements by their ID attribute."
`;

exports[`PromptCreator handles empty view hierarchy 1`] = `
"# Test Code Generation

## Context

### View Hierarchy
\`\`\`

\`\`\`

### Image Snapshot
An image snapshot of the current UI state is attached to this prompt.

### Intent
Tap the submit button

## Guidelines
- Use the most appropriate method(s) from the available API.
- Ensure the code is directly executable in JavaScript.
- If the operation is impossible, explain why in a brief error message (e.g. "A login button element was not found, looks like the user is already logged in").
- Consider the attached image snapshot when determining best course of action.

Return only the executable code or the error message, without any additional formatting or explanation.

## Available Methods
### tap(element: Element) (Suggested, relevance: 1.00)

Taps on the specified element.

#### Example
\`\`\`
await element(by.id("button")).tap();
\`\`\`

#### Guidelines
- Ensure the element is tappable before using this method.

### typeText(element: Element, text: string) (Suggested, relevance: 1.00)

Types the specified text into the element.

#### Example
\`\`\`
await element(by.id("input")).typeText("Hello, World!");
\`\`\`

#### Guidelines
- Use this method only on text input elements.

## Related Methods

3 most relevant methods, based on semantic similarity:
- \`tap(element: Element)\` (relevance: 1.00)
- \`typeText(element: Element, text: string)\` (relevance: 1.00)

## Available Matchers

- \`by.id(id: string)\`: Matches elements by their ID attribute."
`;

exports[`PromptCreator handles long intents 1`] = `
"# Test Code Generation

## Context

### View Hierarchy
\`\`\`
<View><Button testID="submit" /><ActivityIndicator testID="loader" /><Text testID="successMessage" /></View>
\`\`\`

### Image Snapshot
An image snapshot of the current UI state is attached to this prompt.

### Intent
Tap the submit button, then wait for the loading indicator to disappear, and finally verify that the success message is displayed

## Guidelines
- Use the most appropriate method(s) from the available API.
- Ensure the code is directly executable in JavaScript.
- If the operation is impossible, explain why in a brief error message (e.g. "A login button element was not found, looks like the user is already logged in").
- Consider the attached image snapshot when determining best course of action.

Return only the executable code or the error message, without any additional formatting or explanation.

## Available Methods
### tap(element: Element) (Suggested, relevance: 1.00)

Taps on the specified element.

#### Example
\`\`\`
await element(by.id("button")).tap();
\`\`\`

#### Guidelines
- Ensure the element is tappable before using this method.

### typeText(element: Element, text: string) (Suggested, relevance: 1.00)

Types the specified text into the element.

#### Example
\`\`\`
await element(by.id("input")).typeText("Hello, World!");
\`\`\`

#### Guidelines
- Use this method only on text input elements.

## Related Methods

3 most relevant methods, based on semantic similarity:
- \`tap(element: Element)\` (relevance: 1.00)
- \`typeText(element: Element, text: string)\` (relevance: 1.00)

## Available Matchers

- \`by.id(id: string)\`: Matches elements by their ID attribute."
`;
