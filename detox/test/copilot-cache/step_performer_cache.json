{
  "{\"step\":\"Start the application\",\"previous\":[]}": "```typescript\nawait device.launchApp({newInstance: true});\n```",
  "{\"step\":\"Restart the React Native environment\",\"previous\":[]}": "```\nawait device.reloadReactNative();\n```",
  "{\"step\":\"Go to the Actions screen\",\"previous\":[\"Restart the React Native environment\"]}": "```typescript\nawait element(by.text('Actions')).tap();\n```",
  "{\"step\":\"The text field UniqueId005 does not have focus\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```typescript\nawait expect(element(by.id('UniqueId005'))).not.toBeFocused();\n```",
  "{\"step\":\"Text input UniqueId006 is not currently focused\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 does not have focus\"]}": "```typescript\nawait expect(element(by.id('UniqueId006'))).not.toBeFocused();\n```",
  "{\"step\":\"Tap to focus on the first text field\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 does not have focus\",\"Text input UniqueId006 is not currently focused\"]}": "```typescript\nawait element(by.id('UniqueId937')).tap();\n```",
  "{\"step\":\"First text field now has the focus\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 does not have focus\",\"Text input UniqueId006 is not currently focused\",\"Tap to focus on the first text field\"]}": "```typescript\nawait element(by.id('UniqueId937')).tap();\nawait expect(element(by.id('UniqueId937'))).toBeFocused();\n```",
  "{\"step\":\"The second text input remains unfocused\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 does not have focus\",\"Text input UniqueId006 is not currently focused\",\"Tap to focus on the first text field\",\"First text field now has the focus\"]}": "```typescript\nawait expect(element(by.id('UniqueId006'))).not.toBeFocused();\n```",
  "{\"step\":\"Touch the second text field to give it focus\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 does not have focus\",\"Text input UniqueId006 is not currently focused\",\"Tap to focus on the first text field\",\"First text field now has the focus\",\"The second text input remains unfocused\"]}": "```typescript\nawait element(by.id('UniqueId006')).tap();\n```",
  "{\"step\":\"The first text input has lost focus\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 does not have focus\",\"Text input UniqueId006 is not currently focused\",\"Tap to focus on the first text field\",\"First text field now has the focus\",\"The second text input remains unfocused\",\"Touch the second text field to give it focus\"]}": "```typescript\nawait element(by.id('UniqueId937')).tapReturnKey();\n```",
  "{\"step\":\"The text field UniqueId005 (call it \\\"the first\\\") does not have focus\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```typescript\nawait expect(element(by.id('UniqueId005'))).not.toBeFocused();\n```",
  "{\"step\":\"Text input UniqueId006 (\\\"the second\\\") is not currently focused\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 (call it \\\"the first\\\") does not have focus\"]}": "```typescript\nawait expect(element(by.id('UniqueId006'))).not.toBeFocused();\n```",
  "{\"step\":\"Tap to focus on the first text field\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 (call it \\\"the first\\\") does not have focus\",\"Text input UniqueId006 (\\\"the second\\\") is not currently focused\"]}": "```typescript\nawait element(by.id('UniqueId937')).tap();\n```",
  "{\"step\":\"First text field now has the focus\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 (call it \\\"the first\\\") does not have focus\",\"Text input UniqueId006 (\\\"the second\\\") is not currently focused\",\"Tap to focus on the first text field\"]}": "```typescript\nawait element(by.id('UniqueId005')).tap();\nawait expect(element(by.id('UniqueId005'))).toBeFocused();\n```",
  "{\"step\":\"The second text input remains unfocused\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 (call it \\\"the first\\\") does not have focus\",\"Text input UniqueId006 (\\\"the second\\\") is not currently focused\",\"Tap to focus on the first text field\",\"First text field now has the focus\"]}": "```typescript\nawait expect(element(by.id('UniqueId006'))).not.toBeFocused();\n```",
  "{\"step\":\"Touch the second text field to give it focus\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 (call it \\\"the first\\\") does not have focus\",\"Text input UniqueId006 (\\\"the second\\\") is not currently focused\",\"Tap to focus on the first text field\",\"First text field now has the focus\",\"The second text input remains unfocused\"]}": "```typescript\nawait element(by.id('UniqueId006')).tap();\n```",
  "{\"step\":\"The first text input has lost focus\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 (call it \\\"the first\\\") does not have focus\",\"Text input UniqueId006 (\\\"the second\\\") is not currently focused\",\"Tap to focus on the first text field\",\"First text field now has the focus\",\"The second text input remains unfocused\",\"Touch the second text field to give it focus\"]}": "```typescript\nawait element(by.id('UniqueId937')).tap();\nawait element(by.id('UniqueId006')).tap();\n```",
  "{\"step\":\"2nd text field is now the active input\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 (call it \\\"the first\\\") does not have focus\",\"Text input UniqueId006 (\\\"the second\\\") is not currently focused\",\"Tap to focus on the first text field\",\"First text field now has the focus\",\"The second text input remains unfocused\",\"Touch the second text field to give it focus\",\"The first text input has lost focus\"]}": "```typescript\nawait element(by.id('UniqueId006')).tap();\n```",
  "{\"step\":\"Press the \\\"Tap Me\\\" button\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```typescript\nawait element(by.id('View7991')).tap();\n```",
  "{\"step\":\"The text \\\"Tap Working!!!\\\" is shown on the screen\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"Press the \\\"Tap Me\\\" button\"]}": "```typescript\nawait expect(element(by.text('Tap Working!!!'))).toBeVisible();\n```",
  "{\"step\":\"Perform a long press on the \\\"Tap Me\\\" button\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```typescript\nawait element(by.id('View7991')).longPress();\n```",
  "{\"step\":\"The message \\\"Long Press Working!!!\\\" is displayed\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"Perform a long press on the \\\"Tap Me\\\" button\"]}": "```typescript\nawait expect(element(by.text('Long Press Working!!!'))).toBeVisible();\n```",
  "{\"step\":\"Hold the \\\"Long Press Me 1.5s\\\" button for 1.5 seconds\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```typescript\nawait element(by.text('Long Press Me 1.5s')).longPress(1500);\n```",
  "{\"step\":\"Can see \\\"Long Press With Duration Working!!!\\\" on the screen\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"Hold the \\\"Long Press Me 1.5s\\\" button for 1.5 seconds\"]}": "```typescript\nawait expect(element(by.text('Long Press With Duration Working!!!'))).toBeVisible();\n```",
  "{\"step\":\"Long press the top left corner of the \\\"Long Press on Top Left\\\" button\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```typescript\nawait element(by.text('Long Press on Top Left')).longPress({ x: 0, y: 0 });\n```",
  "{\"step\":\"The text \\\"Long Press on Top Left Working!!!\\\" appears\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"Long press the top left corner of the \\\"Long Press on Top Left\\\" button\"]}": "```typescript\nawait expect(element(by.text('Long Press on Top Left Working!!!'))).toBeVisible();\n```",
  "{\"step\":\"Attempt a long press outside the \\\"Long Press on Top Left\\\" button\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```typescript\nawait element(by.id('View7990')).longPress({ x: 50, y: 50 });\n```",
  "{\"step\":\"The message \\\"Long Press on Top Left Working!!!\\\" is not present\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"Attempt a long press outside the \\\"Long Press on Top Left\\\" button\"]}": "```typescript\nawait expect(element(by.text('Long Press on Top Left Working!!!'))).not.toExist();\n```",
  "{\"step\":\"Enter \\\"Type Working!!!\\\" into the text input field\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```typescript\nawait element(by.id('UniqueId937')).typeText('Type Working!!!');\n```",
  "{\"step\":\"The typed text \\\"Type Working!!!\\\" is visible on the screen\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"Enter \\\"Type Working!!!\\\" into the text input field\"]}": "```typescript\nawait expect(element(by.id('UniqueId937'))).toHaveValue('Type Working!!!');\n```",
  "{\"step\":\"Input \\\"testx\\\" in the text field\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```typescript\nawait element(by.id('UniqueId937')).typeText('testx');\n```",
  "{\"step\":\"Hit the backspace key in the text input\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"Input \\\"testx\\\" in the text field\"]}": "```typescript\nawait element(by.id('UniqueId937')).tapBackspaceKey();\n```",
  "{\"step\":\"The text \\\"test\\\" is shown in the input field\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"Input \\\"testx\\\" in the text field\",\"Hit the backspace key in the text input\"]}": "```typescript\nawait expect(element(by.id('UniqueId937'))).toHaveValue('test');\n```",
  "{\"step\":\"Tap the return key on the keyboard for the text input\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```typescript\nawait element(by.id('UniqueId937')).tapReturnKey();\n```",
  "{\"step\":\"The message \\\"Return Working!!!\\\" is visible to the user\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"Tap the return key on the keyboard for the text input\"]}": "```typescript\nawait expect(element(by.text('Return Working!!!'))).toBeVisible();\n```",
  "{\"step\":\"Remove all text from the text input that already has text in it\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```typescript\nawait element(by.id('UniqueId005')).clearText();\n```",
  "{\"step\":\"The text \\\"Clear Working!!!\\\" appears on the screen\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"Remove all text from the text input that already has text in it\"]}": "```typescript\nawait expect(element(by.text('Clear Working!!!'))).toBeVisible();\n```",
  "{\"step\":\"Substitute the existing text with \\\"replaced_text\\\" in the test_id=\\\"UniqueId006\\\" field\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```typescript\nawait element(by.id('UniqueId006')).replaceText('replaced_text');\n```",
  "{\"step\":\"The message \\\"Replace Working!!!\\\" is shown\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"Substitute the existing text with \\\"replaced_text\\\" in the test_id=\\\"UniqueId006\\\" field\"]}": "```typescript\nawait expect(element(by.text('Replace Working!!!'))).toBeVisible();\n```",
  "{\"step\":\"Swipe fast the scrollable area ScrollView799 downwards until the refresh is activated\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```typescript\nawait element(by.id('ScrollView799')).swipe('down', 'fast');\n```",
  "{\"step\":\"The text \\\"PullToReload Working!!!\\\" becomes visible\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"Swipe fast the scrollable area ScrollView799 downwards until the refresh is activated\"]}": "```typescript\nawait expect(element(by.text('PullToReload Working!!!'))).toBeVisible();\n```",
  "{\"step\":\"The element with text \\\"Text1\\\" can be seen\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```typescript\nawait expect(element(by.text('Text1'))).toBeVisible();\n```",
  "{\"step\":\"Swipe the vertical scrollable area ScrollView161 upwards\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The element with text \\\"Text1\\\" can be seen\"]}": "```typescript\nawait element(by.id('ScrollView161')).swipe('up');\n```",
  "{\"step\":\"The \\\"Text1\\\" element is no longer in view\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The element with text \\\"Text1\\\" can be seen\",\"Swipe the vertical scrollable area ScrollView161 upwards\"]}": "```typescript\nawait element(by.id('ScrollView161')).swipe('up', 'fast');\nawait expect(element(by.text('Text1'))).not.toBeVisible();\n```",
  "{\"step\":\"Swipe the vertical area back down\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The element with text \\\"Text1\\\" can be seen\",\"Swipe the vertical scrollable area ScrollView161 upwards\",\"The \\\"Text1\\\" element is no longer in view\"]}": "```typescript\nawait element(by.id('ScrollView161')).swipe('down', 'fast');\n```",
  "{\"step\":\"\\\"Text1\\\" has reappeared on the screen\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The element with text \\\"Text1\\\" can be seen\",\"Swipe the vertical scrollable area ScrollView161 upwards\",\"The \\\"Text1\\\" element is no longer in view\",\"Swipe the vertical area back down\"]}": "```typescript\nawait expect(element(by.text('Text1'))).toBeVisible();\n```",
  "{\"step\":\"The \\\"HText1\\\" element is present\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```\nawait expect(element(by.text('HText1'))).toExist();\n```",
  "{\"step\":\"Swipe the horizontal scrollable area ScrollViewH towards the left\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The \\\"HText1\\\" element is present\"]}": "```typescript\nawait element(by.id('ScrollViewH')).swipe('left');\n```",
  "{\"step\":\"\\\"HText1\\\" is not in the visible area\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The \\\"HText1\\\" element is present\",\"Swipe the horizontal scrollable area ScrollViewH towards the left\"]}": "```typescript\nawait expect(element(by.text('HText1'))).not.toBeVisible();\n```",
  "{\"step\":\"Slide the horizontal scroll back to the right\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The \\\"HText1\\\" element is present\",\"Swipe the horizontal scrollable area ScrollViewH towards the left\",\"\\\"HText1\\\" is not in the visible area\"]}": "```typescript\nawait element(by.id('ScrollViewH')).swipe('right', 'fast');\n```",
  "{\"step\":\"The \\\"HText1\\\" element has come back into view\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The \\\"HText1\\\" element is present\",\"Swipe the horizontal scrollable area ScrollViewH towards the left\",\"\\\"HText1\\\" is not in the visible area\",\"Slide the horizontal scroll back to the right\"]}": "```typescript\nawait expect(element(by.text('HText1'))).toBeVisible();\n```",
  "{\"step\":\"The slider is set to 25%\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\"]}": "```typescript\nawait element(by.id('sliderWithASimpleID')).adjustSliderToPosition(0.25);\n```",
  "{\"step\":\"Move the slider to the 75% position\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The slider is set to 25%\"]}": "```typescript\nawait element(by.id('sliderWithASimpleID')).adjustSliderToPosition(0.75);\n```",
  "{\"step\":\"The slider value is approximately 75%, give or take 10%\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The slider is set to 25%\",\"Move the slider to the 75% position\"]}": "```typescript\nawait expect(element(by.id('sliderWithASimpleID'))).toHaveSliderPosition(0.75, 0.1);\n```",
  "{\"step\":\"Text input UniqueId006 (call it \\\"the second\\\") is not currently focused\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 (call it \\\"the first\\\") does not have focus\"]}": "```typescript\nawait expect(element(by.id('UniqueId006'))).not.toBeFocused();\n```",
  "{\"step\":\"Tap to focus on the first text field\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 (call it \\\"the first\\\") does not have focus\",\"Text input UniqueId006 (call it \\\"the second\\\") is not currently focused\"]}": "```typescript\nawait element(by.id('UniqueId937')).tap();\n```",
  "{\"step\":\"First text field now has the focus\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 (call it \\\"the first\\\") does not have focus\",\"Text input UniqueId006 (call it \\\"the second\\\") is not currently focused\",\"Tap to focus on the first text field\"]}": "```typescript\nawait element(by.id('UniqueId005')).tap();\nawait expect(element(by.id('UniqueId005'))).toBeFocused();\n```",
  "{\"step\":\"The second text input remains unfocused\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 (call it \\\"the first\\\") does not have focus\",\"Text input UniqueId006 (call it \\\"the second\\\") is not currently focused\",\"Tap to focus on the first text field\",\"First text field now has the focus\"]}": "```typescript\nawait expect(element(by.id('UniqueId006'))).not.toBeFocused();\n```",
  "{\"step\":\"Touch the second text field to give it focus\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 (call it \\\"the first\\\") does not have focus\",\"Text input UniqueId006 (call it \\\"the second\\\") is not currently focused\",\"Tap to focus on the first text field\",\"First text field now has the focus\",\"The second text input remains unfocused\"]}": "```typescript\nawait element(by.id('UniqueId006')).tap();\n```",
  "{\"step\":\"The first text input has lost focus\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 (call it \\\"the first\\\") does not have focus\",\"Text input UniqueId006 (call it \\\"the second\\\") is not currently focused\",\"Tap to focus on the first text field\",\"First text field now has the focus\",\"The second text input remains unfocused\",\"Touch the second text field to give it focus\"]}": "```typescript\nawait element(by.id('UniqueId006')).tap();\nawait expect(element(by.id('UniqueId937'))).not.toBeFocused();\n```",
  "{\"step\":\"2nd text field is now the active input\",\"previous\":[\"Restart the React Native environment\",\"Go to the Actions screen\",\"The text field UniqueId005 (call it \\\"the first\\\") does not have focus\",\"Text input UniqueId006 (call it \\\"the second\\\") is not currently focused\",\"Tap to focus on the first text field\",\"First text field now has the focus\",\"The second text input remains unfocused\",\"Touch the second text field to give it focus\",\"The first text input has lost focus\"]}": "```typescript\nawait element(by.id('UniqueId006')).tap();\n```"
}